{"version":3,"sources":["../../server/controllers/GameController.js"],"names":["GameController","model","io","_io","all","bind","makeGame","update","setLiveGames","createStream","game","gameIO","of","_id","_model","find","status","liveGames","console","log","length","forEach","error","req","res","next","populate","where","ne","decoded","games","json","message","errors","adminId","newGame","body","create","User","findOne","admin","push","save","gameId","params","id","keys","key","Error","Object","AppController"],"mappings":"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","sourcesContent":["import AppController from './AppController';\nimport configSocket from '../serverSocket';\nimport User from '../models/User';\nclass GameController extends AppController {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(model, io) {\n    super(model);\n    this._io = io;\n    this.all = this.all.bind(this);\n    this.makeGame = this.makeGame.bind(this);\n    this.update = this.update.bind(this);\n    this.setLiveGames = this.setLiveGames.bind(this);\n    this.createStream = this.createStream.bind(this);\n  }\n\n  createStream(game) {\n    let gameIO = this._io.of(`/${game._id}`);\n    configSocket(gameIO, game._id);\n  }\n\n  async setLiveGames() {\n    try {\n      const liveGames = await this._model.find({ status: 'live' });\n      console.log('=============================FOUND LIVE GAMES', liveGames.length);\n      liveGames.forEach(this.createStream);\n    } catch (error) {\n      console.log('==========Error setting live games================');\n      console.error(error);\n    }\n  }\n\n  async all(req, res, next) {\n    try {\n      const games = await this._model\n        .find({ status: 'live' })\n        .populate('games')\n        .where('adminId')\n        .ne(req.decoded._id)\n        .populate('adminId');\n      res.status(200).json(games);\n    } catch (e) {\n      req.error = { message: 'error finding games for admin', status: 500, errors: e };\n      next();\n    }\n  }\n\n  async makeGame(req, res, next) {\n    try {\n      const adminId = req.decoded._id;\n      const newGame = { ...req.body, adminId };\n      const game = await this.create(newGame);\n      const admin = await User.findOne({ _id: adminId });\n      if (admin.games) admin.games.push(game._id);\n      else admin.games = [game._id];\n      await admin.save();\n      res.status(200).json(game);\n    } catch (e) {\n      req.error = { message: 'error creating a game for admin', status: 500, errors: e };\n      next();\n    }\n  }\n\n  async update(req, res, next) {\n    try {\n      // const adminId = req.decoded._id;\n      const gameId = req.params.id;\n      const keys = ['__v', '_id', 'createdAt', 'updatedAt'];\n      keys.forEach((key) => {\n        delete req.body[key];\n      });\n\n      if (!gameId) throw Error('need a valid game id');\n      //TODO: make sure only creator can update and no updates can happen after status is live;\n      const game = await this._model.findOne({ _id: gameId }).populate('questions');\n\n      Object.keys(req.body).forEach((key) => {\n        // console.log(\"key:\", key)\n        game[key] = req.body[key];\n      });\n\n      await game.save();\n\n      if (game.status === 'live') {\n        console.log('CREATING STREAM');\n        this.createStream(game._id);\n      }\n      res.status(200).json(game);\n    } catch (e) {\n      req.error = { message: 'cannot update game', status: 500, errors: e };\n      next();\n    }\n  }\n}\nexport default GameController;\n"],"file":"GameController.js"}