{"version":3,"sources":["../../server/controllers/AppController.js"],"names":["AppController","model","TypeError","_model","create","bind","findOne","findAll","obj","newDocument","save","savedDocument","Error","findObj","document","adminId","find","documents"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;IAIMA,a;;;AACJ;;;;;AAKA,yBAAYC,KAAZ,EAAmB;AAAA;;AACjB,QAAI,gEAAeD,aAAnB,EAAkC;AAChC,YAAM,IAAIE,SAAJ,CAAc,8CAAd,CAAN;AACD;;AACD,SAAKC,MAAL,GAAcF,KAAd;AACA,SAAKG,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAf;AACD;;;;;;;oDAEYG,G;;;;;;;AAELC,gBAAAA,W,GAAc,IAAI,KAAKN,MAAT,CAAgBK,GAAhB,C;;uBACUC,WAAW,CAACC,IAAZ,E;;;AAAtBC,gBAAAA,a;iDACCA,a;;;;;sBAEDC,KAAK,a;;;;;;;;;;;;;;;;;;;;;qDAIDC,O;;;;;;;;uBAEa,KAAKV,MAAL,CAAYG,OAAZ,CAAoBO,OAApB,C;;;AAAjBC,gBAAAA,Q;kDACCA,Q;;;;;sBAEDF,KAAK,c;;;;;;;;;;;;;;;;;;;;;qDAIDG,O;;;;;;;;qBAGNA,O;;;;;;uBACgB,KAAKZ,MAAL,CAAYa,IAAZ,CAAiB;AAAED,kBAAAA,OAAO,EAAPA;AAAF,iBAAjB,C;;;AAAlBE,gBAAAA,S;;;;;;uBAEkB,KAAKd,MAAL,CAAYa,IAAZ,E;;;AAAlBC,gBAAAA,S;;;kDAEKA,S;;;;;kDAEAL,KAAK,c;;;;;;;;;;;;;;;;;;;;eAKHZ,a","sourcesContent":["/**\n * The App controller class where other controller inherits or\n * overrides pre defined and existing properties\n */\nclass AppController {\n  /**\n   * @param {Model} model The default model object\n   * for the controller. Will be required to create\n   * an instance of the controller\n   */\n  constructor(model) {\n    if (new.target === AppController) {\n      throw new TypeError('Cannot construct Abstract instances directly');\n    }\n    this._model = model;\n    this.create = this.create.bind(this);\n    this.findOne = this.findOne.bind(this);\n    this.findAll = this.findAll.bind(this);\n  }\n\n  async create(obj) {\n    try {\n      let newDocument = new this._model(obj);\n      const savedDocument = await newDocument.save();\n      return savedDocument;\n    } catch (e) {\n      throw Error(e);\n    }\n  }\n\n  async findOne(findObj) {\n    try {\n      const document = await this._model.findOne(findObj);\n      return document;\n    } catch (e) {\n      throw Error(e);\n    }\n  }\n\n  async findAll(adminId) {\n    try {\n      let documents;\n      if (adminId) {\n        documents = await this._model.find({ adminId });\n      } else {\n        documents = await this._model.find();\n      }\n      return documents;\n    } catch (e) {\n      return Error(e);\n    }\n  }\n}\n\nexport default AppController;\n"],"file":"AppController.js"}