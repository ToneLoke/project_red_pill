{"version":3,"sources":["../server/serverSocket.js"],"names":["setupGameSocket","gameIO","id","liveCtrl","LiveController","GameModel","use","socket","next","handshake","query","_id","username","user","console","log","Error","on","connected","data","emit","updateGame"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;AAEe,SAASA,eAAT,CAAyBC,MAAzB,EAAiCC,EAAjC,EAAqC;AAClD,MAAMC,QAAQ,GAAG,IAAIC,0BAAJ,CAAmBC,gBAAnB,EAA8BJ,MAA9B,EAAsCC,EAAtC,CAAjB,CADkD,CAElD;;AACAD,EAAAA,MAAM,CAACK,GAAP,CAAW,UAACC,MAAD,EAASC,IAAT,EAAkB;AAAA,gCACHD,MAAM,CAACE,SAAP,CAAiBC,KADd;AAAA,QACrBC,GADqB,yBACrBA,GADqB;AAAA,QAChBC,QADgB,yBAChBA,QADgB;;AAE3B,QAAID,GAAG,IAAIC,QAAX,EAAqB;AACnBL,MAAAA,MAAM,CAACM,IAAP,GAAc;AAAEF,QAAAA,GAAG,EAAHA,GAAF;AAAOC,QAAAA,QAAQ,EAARA;AAAP,OAAd;AACA,aAAOJ,IAAI,EAAX;AACD,KAHD,MAGO;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAOP,IAAI,CAAC,IAAIQ,KAAJ,CAAU,mBAAV,CAAD,CAAX;AACD;AACF,GATD;AAWAf,EAAAA,MAAM,CAACgB,EAAP,CAAU,YAAV,EAAwB,UAACV,MAAD,EAAY;AAClCJ,IAAAA,QAAQ,CAACe,SAAT,CAAmBX,MAAnB;AACAA,IAAAA,MAAM,CAACU,EAAP,CAAU,kBAAV,EAA8B,UAACE,IAAD,EAAU;AACtC,UAAI,YAAYA,IAAhB,EAAsB;AACpBlB,QAAAA,MAAM,CAACmB,IAAP,CAAY,cAAZ,EAA4BD,IAA5B;AACD,OAFD,MAEO;AACLhB,QAAAA,QAAQ,CAACkB,UAAT,CAAoBF,IAApB;AACD;AACF,KAND,EAFkC,CASlC;AACD,GAVD;AAWD","sourcesContent":["import GameModel from './models/Game';\nimport LiveController from './controllers/LiveController';\n//======================= CONFIGURE SOCKET FOR EACH PUBLISHED GAME =======================\n\nexport default function setupGameSocket(gameIO, id) {\n  const liveCtrl = new LiveController(GameModel, gameIO, id);\n  //TODO: add security for sockets via io.use\n  gameIO.use((socket, next) => {\n    let { _id, username } = socket.handshake.query;\n    if (_id && username) {\n      socket.user = { _id, username };\n      return next();\n    } else {\n      console.log('FAILED');\n      return next(new Error('no user in socket'));\n    }\n  });\n\n  gameIO.on('connection', (socket) => {\n    liveCtrl.connected(socket);\n    socket.on('LIVE_GAME_UPDATE', (data) => {\n      if ('status' in data) {\n        gameIO.emit('GAME_UPDATED', data);\n      } else {\n        liveCtrl.updateGame(data);\n      }\n    });\n    //add player to game roster\n  });\n}\n"],"file":"serverSocket.js"}