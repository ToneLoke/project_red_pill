{"version":3,"sources":["../../server/models/User.js"],"names":["UserSchema","mongoose","Schema","username","type","String","required","unique","games","Types","ObjectId","ref","completed","firstName","lastName","password","timestamps","pre","next","isModified","bcrypt","hashSync","methods","authenticate","user","compareSync","User","model"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,UAAU,GAAG,IAAIC,qBAASC,MAAb,CACjB;AACEC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,IAFF;AAGRC,IAAAA,MAAM,EAAE;AAHA,GADZ;AAMEC,EAAAA,KAAK,EAAE,CACL;AACEJ,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBO,KAAhB,CAAsBC,QAD9B;AAEEC,IAAAA,GAAG,EAAE;AAFP,GADK,CANT;AAYEC,EAAAA,SAAS,EAAE,CAACP,MAAD,CAZb;AAaEQ,EAAAA,SAAS,EAAER,MAbb;AAcES,EAAAA,QAAQ,EAAET,MAdZ;AAeEU,EAAAA,QAAQ,EAAE;AACRX,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE;AAFF;AAfZ,CADiB,EAqBjB;AACEU,EAAAA,UAAU,EAAE;AADd,CArBiB,CAAnB;AA0BAhB,UAAU,CAACiB,GAAX,CAAe,MAAf,EAAuB,UAASC,IAAT,EAAe;AACpC,MAAI,CAAC,KAAKC,UAAL,CAAgB,UAAhB,CAAL,EAAkC,OAAOD,IAAI,EAAX;AAClC,OAAKH,QAAL,GAAgBK,mBAAOC,QAAP,CAAgB,KAAKN,QAArB,EAA+B,CAA/B,CAAhB;AACAG,EAAAA,IAAI;AACL,CAJD,E,CAKA;;AACAlB,UAAU,CAACsB,OAAX,CAAmBC,YAAnB,GAAkC,UAASR,QAAT,EAAmB;AACnD,MAAIS,IAAI,GAAG,IAAX;AACA,SAAOJ,mBAAOK,WAAP,CAAmBV,QAAnB,EAA6BS,IAAI,CAACT,QAAlC,CAAP;AACD,CAHD;;AAKA,IAAMW,IAAI,GAAGzB,qBAAS0B,KAAT,CAAe,MAAf,EAAuB3B,UAAvB,CAAb;;eACe0B,I","sourcesContent":["import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\n\nconst UserSchema = new mongoose.Schema(\n  {\n    username: {\n      type: String,\n      required: true,\n      unique: true\n    },\n    games: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Game'\n      }\n    ],\n    completed: [String],\n    firstName: String,\n    lastName: String,\n    password: {\n      type: String,\n      required: true\n    }\n  },\n  {\n    timestamps: true\n  }\n);\n\nUserSchema.pre('save', function(next) {\n  if (!this.isModified('password')) return next();\n  this.password = bcrypt.hashSync(this.password, 8);\n  next();\n});\n// authenticate a user password\nUserSchema.methods.authenticate = function(password) {\n  var user = this;\n  return bcrypt.compareSync(password, user.password);\n};\n\nconst User = mongoose.model('User', UserSchema);\nexport default User;\n"],"file":"User.js"}